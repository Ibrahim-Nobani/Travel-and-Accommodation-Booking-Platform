// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBookingPlatform.Infrastructure.Database;

#nullable disable

namespace TravelBookingPlatform.Migrations
{
    [DbContext(typeof(TravelBookingPlatformDbContext))]
    [Migration("20231230190014_AddingUniqueConstraintOnUsername")]
    partial class AddingUniqueConstraintOnUsername
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1,
                            Status = "Confirmed",
                            TotalPrice = 150m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CheckInDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 3,
                            Status = "Confirmed",
                            TotalPrice = 200m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CheckInDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 5,
                            Status = "Confirmed",
                            TotalPrice = 180m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CheckInDate = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 2,
                            Status = "Confirmed",
                            TotalPrice = 120m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CheckInDate = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 4,
                            Status = "Confirmed",
                            TotalPrice = 250m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOffice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Country 1",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "City 1",
                            PostOffice = "PostOffice 1"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Country 2",
                            CreatedAt = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "City 2",
                            PostOffice = "PostOffice 2"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Country 3",
                            CreatedAt = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "City 3",
                            PostOffice = "PostOffice 3"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Country 4",
                            CreatedAt = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "City 4",
                            PostOffice = "PostOffice 4"
                        },
                        new
                        {
                            Id = 5,
                            Country = "Country 5",
                            CreatedAt = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "City 5",
                            PostOffice = "PostOffice 5"
                        });
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.FeaturedDeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("FeaturedDeals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountedPrice = 150m,
                            HotelId = 1,
                            OriginalPrice = 200m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountedPrice = 200m,
                            HotelId = 2,
                            OriginalPrice = 250m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountedPrice = 150m,
                            HotelId = 3,
                            OriginalPrice = 180m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountedPrice = 120m,
                            HotelId = 4,
                            OriginalPrice = 150m
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountedPrice = 250m,
                            HotelId = 5,
                            OriginalPrice = 300m
                        });
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StarRating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Location 1",
                            Name = "Hotel 1",
                            Owner = "Owner 1",
                            StarRating = 3
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Location 2",
                            Name = "Hotel 2",
                            Owner = "Owner 2",
                            StarRating = 4
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            CreatedAt = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Location 3",
                            Name = "Hotel 3",
                            Owner = "Owner 3",
                            StarRating = 5
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            CreatedAt = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Location 4",
                            Name = "Hotel 4",
                            Owner = "Owner 4",
                            StarRating = 3
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            CreatedAt = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Location 5",
                            Name = "Hotel 5",
                            Owner = "Owner 5",
                            StarRating = 4
                        });
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdultCapacity")
                        .HasColumnType("int");

                    b.Property<int>("ChildCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdultCapacity = 2,
                            ChildCapacity = 1,
                            CreatedAt = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = 1,
                            Number = 101
                        },
                        new
                        {
                            Id = 2,
                            AdultCapacity = 3,
                            ChildCapacity = 2,
                            CreatedAt = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = 1,
                            Number = 102
                        },
                        new
                        {
                            Id = 3,
                            AdultCapacity = 2,
                            ChildCapacity = 1,
                            CreatedAt = new DateTime(2023, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = 2,
                            Number = 201
                        },
                        new
                        {
                            Id = 4,
                            AdultCapacity = 4,
                            ChildCapacity = 2,
                            CreatedAt = new DateTime(2023, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = 2,
                            Number = 202
                        },
                        new
                        {
                            Id = 5,
                            AdultCapacity = 2,
                            ChildCapacity = 1,
                            CreatedAt = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = 3,
                            Number = 301
                        });
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.TrendingDestination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("TrendingDestinations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedAt = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            CreatedAt = new DateTime(2023, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            CreatedAt = new DateTime(2023, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            CreatedAt = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "hashedPassword1",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "hashedPassword2",
                            Username = "user2"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "hashedPassword3",
                            Username = "user3"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "hashedPassword4",
                            Username = "user4"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "hashedPassword5",
                            Username = "user5"
                        });
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Booking", b =>
                {
                    b.HasOne("TravelBookingPlatform.Application.Domain.Entities.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBookingPlatform.Application.Domain.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.FeaturedDeal", b =>
                {
                    b.HasOne("TravelBookingPlatform.Application.Domain.Entities.Hotel", "Hotel")
                        .WithMany("FeaturedDeals")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Hotel", b =>
                {
                    b.HasOne("TravelBookingPlatform.Application.Domain.Entities.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Room", b =>
                {
                    b.HasOne("TravelBookingPlatform.Application.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.TrendingDestination", b =>
                {
                    b.HasOne("TravelBookingPlatform.Application.Domain.Entities.City", "City")
                        .WithMany("TrendingDestinations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.City", b =>
                {
                    b.Navigation("Hotels");

                    b.Navigation("TrendingDestinations");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("FeaturedDeals");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TravelBookingPlatform.Application.Domain.Entities.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
